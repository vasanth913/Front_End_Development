@import url("https://fonts.googleapis.com/css2?family=Nunito&display=swap");

/* || START RESET */

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* END RESET */

/* || START VARIABLES */

/* :root where we can use to define the variables, If you use it here we can use 
for all the pages and screens */

:root{
    /* -- is used to declare a variable and caps is used to mention the standard 
    that it is used as a constant and is used gloablly */

    /* FONT */

    --FF: "Nunito", sans-serif;

    /* clamp function is useful for the responsive 
    using clamp minimum it will be 12px (0.75*16px) 
    where 1rem= 16px in root element and max will be 24px (1.5*16px)*/

    --FS: clamp(1.75rem, 3vh, 2.2rem);
    --FS-SM: clamp(0.75rem, 2vh, 1.5rem);
    --FS-XL: 3rem;

    /* COLOR */

    --BGCOLOR: #ffe4c4;
    --ALT-BGCOLOR: #00008b;
    --RADIAL-COLOR: whitesmoke;
    --TEXT-COLOR: whitesmoke;
    --DARK-COLOR: #000000;

    /* SQUARE */

    --SQUARE-BGCOLOR:papayawhip;
    --SQUARE-SIZE: max(150px, 20vw);

    /* GENERAL */

    --PADDING: 1.2rem;
    --BORDERS: 2px solid var(var(--BGCOLOR));
    --SHADOWS: 0px 6px 5px -5px var(--DARK-COLOR)
    
}

/* || END VARIABLES */

/* || START UTILITY CLASSES */

.nowrap{
    white-space: nowrap;
}

/* END UTILITY CLASSES */

/* || Dark Mode */

/* We can switch to dark and light mode by right click on desktop --> Personalization
--> Colors --> choose your mode --> Dark/Light */

@media (prefers-color-scheme: dark){
    :root{
        --BGCOLOR: black;
        --ALT-BGCOLOR: grey;
        --RADIAL-COLOR: rgb(210, 163, 210);
    }
}

/* || START GENRAL CSS */

body{
    font: var(--FS) var(--FF);
    min-height: 100vh;

    /* We use that BGCLOR variable by using Var */

    background-color: var(--BGCOLOR);
    background-image: linear-gradient(var(--RADIAL-COLOR),var(--BGCOLOR));

    display: flex;
    flex-direction: column;
}

header{
    top:0;
}

footer{
    bottom: 0;
}

header,footer{
    color: var(--TEXT-COLOR);
    background-color: var(--ALT-BGCOLOR);
}

nav{
    padding: var(--PADDING);
    color: white;
    background-color: darkkhaki; 
    border-bottom: var(--BORDERS);
}

header,nav, main, footer{
    text-align: center;
}

main{
    flex-grow: 1;
    /* padding: 10px 0;
    display: flex; */
    /* flex-direction: column; */
    /* justify-content: space-evenly;
    align-items: center; */

    /* flex-flow is a combination of flex direction and flex-wrap */

    /* flex-flow: row wrap;
    gap: min(4vw, 15px); */

    display: grid;
    grid-template-columns: repeat(4, minmax(100px,300px));

    /* while using mix function one should be a growing value like 2vh and
    other should be fixed value like 20px */

    gap:min(2vh,20px);
}

a:hover, a:focus{
    /* Filter property and brightness function is used to increase the brightness
    to dim we can use opacity */
    /* filter: brightness(150%); */

    /* we can also use huerotate to change the color */

    filter: hue-rotate(180deg);
}
.tooltip{
    border-bottom: 1px dashed red;
    position: relative;
}

.tooltip:hover::before{
    content: attr(data-tooltip);
    position: absolute;
    top: -50px;
}

@media screen and (min-width: 576px){
    main {
        flex-flow: row nowrap;
        justify-content: space-between;
    }

    main section {
        width: calc(70%-5px);
    }
    main aside{
        width: calc(30%-5px);
    }
}


.square--highlights{
    
    /* We can use the same variable 'brown' by using different class to override*/

    --SQUARE-BGCOLOR: brown;
    --SQUARE-SIZE: 200px;
}

.square{
    background-color: var(--SQUARE-BGCOLOR);
    width: var(--SQUARE-SIZE);
    height: var(--SQUARE-SIZE);
    border: var(--BORDERS);
    border-radius: 15px;
    display: grid;
    place-content: center;
    font-size: var(--FS-XL);
    box-shadow: var(--SHADOWS);
}




/* End GENRAL CSS */